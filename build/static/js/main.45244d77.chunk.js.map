{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","state","darkBackgroundModes","lightBackgroundModes","backgroundType","Configs","appClass","plainBackgroundMode","devIntro","devDesc","backgroundMode","backgroundIndex","bgStyle","icons","provider","ethers","providers","Web3Provider","window","ethereum","send","accounts","getBalance","balance","balanceInEther","utils","formatEther","getBlockNumber","block","on","_this2","setState","winContract","Contract","ERC721_ABI","name","tokenName","selectedAddress","winContractadd","_amount","_to","signer","getSigner","connect","mint","_this3","react_default","a","createElement","onClick","connectToMetamask","document","title","_this$state","className","style","Typist_default","map","icon","i","target","key","rel","href","concat","url","image","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.45244d77.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Typist from 'react-typist';\nimport './App.css';\nimport Configs from './configurations.json';\nimport ParticlesBg from 'particles-bg';\nimport ERC721_ABI from \"./ERC721_ABI.json\";\nimport { ethers } from \"ethers\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      darkBackgroundModes: [\n        'day',\n        'terminal',\n        'torquoise',\n        'alizarin',\n        'amythyst',\n        'carrot',\n        'peterriver'\n      ],\n      lightBackgroundModes: [\n        'night',\n        'lightred',\n        'lightpurple',\n        'lightgreen',\n        'lightblue',\n        'lightyellow'\n      ],\n      backgroundType: Configs.backgroundType || 'plain',\n      appClass: Configs.plainBackgroundMode || 'daylight',\n      devIntro: Configs.devIntro || 'Lorem Ipsum',\n      devDesc:\n        Configs.devDesc ||\n        'Aute veniam ut deserunt cillum irure pariatur Lorem dolore anim nostrud quis veniam elit culpa.',\n      backgroundMode: 'default',\n      backgroundIndex: 0,\n      bgStyle: {},\n      icons: Configs.icons || []\n    };\n  }\n\n  componentWillMount = () => {\n    \n  };\n\n    async connectToMetamask() {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        const balance = await provider.getBalance(accounts[0]);\n        const balanceInEther = ethers.utils.formatEther(balance);\n        const block = await provider.getBlockNumber();\n\n        provider.on(\"block\", (block) => {\n            this.setState({ block })\n        })\n\n        const winContract = new ethers.Contract('0x866ebb7d3Dc493ac0994719D4481341A3a678B0c', ERC721_ABI, provider);\n        const tokenName = await winContract.name();\n        const winContractadd = ('0x866ebb7d3Dc493ac0994719D4481341A3a678B0c');\n\n\n        this.setState({ selectedAddress: accounts[0], balance: balanceInEther, block, tokenName, winContractadd })\n    }\n\n    async mint(_amount, _to) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n\n        const winContract = new ethers.Contract('0x866ebb7d3Dc493ac0994719D4481341A3a678B0c', ERC721_ABI, provider);\n\n        const winContractWithSigner = winContract.connect(signer);\n        winContractWithSigner.mint(_amount, _to)\n    }\n\n    renderMetamask() {\n        if (!this.state.selectedAddress) {\n            return (\n                <button onClick={() => this.connectToMetamask()}>Connect to Metamask</button>\n            )\n        } else {\n            return (\n                <div>\n                    <p>Welcome {this.state.selectedAddress}</p>\n                    <button onClick={() => this.mint(\"1\", this.state.selectedAddress)}>Mint 1 ID</button>\n                </div>\n            );\n        }\n    }\n    componentDidMount() {\n        document.title = \"Mint Page\";\n    } \n\n  render() {\n    const {\n      appClass, bgStyle, backgroundMode, devIntro, devDesc, icons\n    } = this.state;\n\n    return (\n      <div className={appClass} style={bgStyle}>\n        <div\n          className={backgroundMode}\n        >\n          <main className=\"App-main\">\n            \n            <div className=\"container\">\n             <h1 className=\"intro\">{devIntro}</h1>\n            <div className=\"shell\">Cyberfist</div>\n            <div className=\"tagline\">\n                <Typist>{devDesc}</Typist>\n            </div>              \n            <div className=\"icons-social\">\n                {icons.map((icon, i) => (\n                  <a\n                    target=\"_blank\"\n                    key={i}\n                    rel=\"noopener noreferrer\"\n                    href={`${icon.url}`}\n                  >\n                    <i className={`fab ${icon.image}`} />\n                  </a>\n                ))}\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { ethers } from \"ethers\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();"],"sourceRoot":""}